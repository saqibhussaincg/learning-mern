1. npm init
2. install express
3. install mongoose
4. install nodemon

5. sub se pehle express require karte hain or app.get use karte hain check karne k liye chal raha hai ya nahi

6. install react router dom navigation link k liye

7. nav k component mai link to karenge, wohi name denge jese a tag mai dete hain html mai eg: to="/add" Add Product

8. browser router > routes > route mai path mai wohi name ayega jo link to mai dia tha or element k andar ayega component. eg: <route path="/add" element={component}

9. make signup page component 
= define use state set values name email password etc

10. install mongodb compass and check with app.get chal raha hai ya nahi

11. mongodb use karne k liye mongoose require karna hoga or connect bhi karna hoga or connect k andar database ka path function k andar denge

12. new mongoose.Schema k andar schema define honge

13. mongoose.model(product, or schema) define karenge database se data lane k liye ya edit karne k liye

// BACKEND 

14. config k andar mongoose require karenge or connect karenge or import require karenge is file ko index mai

15. User k component mai schema ko define karenge or export karenge model yahi database collection ka naam or index ki file mai import karenge 

16. ab ek route banayega api k liye app.post register name ki api banayega

17. body se data lane k liye midlleware express.json() use karenge kyun k postman se data json format mai ata hai

18. new User(req.body) schema route k andar call karenge os k andar body se data ayega or wo body wala data result k variable mai user.save() mai jayega or result jayega res.send(result) mai or idhar se mongoDB mai save ho jayega 

19. install cors 
cors ko require karenge 
or app.use(cors()) use karege as a middleware
cors backend se issue hota hai per nazar browser per aata hai

// SIGNUP COMPONENT WORKING

20. SIGNUP component per kaam kar rahay hain
button click k function mai var result mai fetch mai url pass hoga register api ka jo backend mai banaya hai 2nd parameter mai 

method define hoga 

body define hogi os mai kia dalna hai wo backend dev batayega eg: name, email, pass.
or ye json stringily k andar jayega.

header bhejna hota hai content type ka

or akhir mai var result call karenge await de kar await result.json()

if(result) mai homepage per navigate kara sakte hain

21 . locatstorage mai signup user k data ko rakhenge

22. Private Component 
private component mai return <outlet> define karenge
auth condition lagaye ge check karenge localstorage se getitem user
user signup hai tou outlet dikhao warna signup walay page per le jao

23. signup walay component mai useeffect banayega or condition denge same localstorage se item get karo user (req.body) wala data save hai ya nahi phr
if ki condition

24. NAV Component kyun k signup k baad signup wala page nazar nahi aana chaiye  
same wohi const auth localstorage getitem wali line idhar bhi ayegi os is variable k zariye condition banaye ge li link k andar 

25. LOGOUT Function in NAV Component 
logout ka koi component nahi hoga logout ka just onclick banega link mai or os k click per signup k oper jana chaiye 
or local storage bhi clear ho jayega
or navigate ka function bhi laga sakte hain function mai safety k liye
usenavigate re render kar deta hai 

BACKEND WORKING

26. login name ki api banayega check karenge res.send(req.body) 

27. select -password se password show nahi hoga

if else condition lagengi login karane k liye user email password math ho raha hai ya nahi
